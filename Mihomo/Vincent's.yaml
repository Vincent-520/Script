# mihomo 配置
# 日期：2024-10-25 20:31:03
# 配置基于：可莉@iKeLee
# 配置二创：Vincent
# 适用版本：所有使用 mihomo 核心的程序
port: 7890
socks-port: 7891
mixed-port: 7892
redir-port: 7893
tproxy-port: 7894

unified-delay: true
geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 24
tcp-concurrent: true
find-process-mode: strict
global-client-fingerprint: chrome

allow-lan: true
mode: rule
log-level: warning
ipv6: true
udp: true

external-controller: 127.0.0.1:9090
external-ui-url: 'https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip'
# external-ui: ui

geox-url:
  # geoip: 'https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/geoip.dat'
  # geosite: 'https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/geosite.dat'
  mmdb: 'https://gitlab.com/Masaiki/GeoIP2-CN/-/raw/release/Country.mmdb'
  asn: 'https://gitlab.com/Loon0x00/loon_data/-/raw/main/geo/GeoLite2-ASN.mmdb'

profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com

  skip-domain:
    - Mijia Cloud

tun:
  enable: true
  stack: system
  dns-hijack:
    - any:53
  auto-route: true
  auto-detect-interface: true

dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter:
    - "*"
    - +.lan
  default-nameserver:
    - 223.5.5.5
    - 223.6.6.6
  nameserver:
    - https://223.5.5.5/dns-query#h3=true
    - https://223.6.6.6/dns-query#h3=true

# 锚点 - 节点订阅的参数 [每小时更新一次订阅节点，每 6 秒一次健康检查]
NodeParam: &NodeParam {type: http, interval: 3600, health-check: {enable: true, url: 'http://cp.cloudflare.com', interval: 6}}

# 锚点 - 节点订阅
proxy-providers: 
  机场名称1:
    url: '机场1的订阅URL'
    <<: *NodeParam
    path: './proxy_providers/机场名称1.yaml'
    override:
      additional-prefix: "[机场名称1] " # 为订阅节点添加机场名称前缀
  机场名称2:
    url: '机场2的订阅URL'
    <<: *NodeParam
    path: './proxy_providers/机场名称2.yaml'
    override:
      additional-prefix: "[机场名称2] " # 为订阅节点添加机场名称前缀  
  VPS名称1:
    type: file
    path: ./proxy_providers/VPS名称1.yaml # 自己写个文件丢到这里来
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 6
    override:
      additional-prefix: "[VPS名称1] " # 为VPS节点添加名称前缀  

# 锚点 - 节点筛选组
FilterUS: &FilterUS '^(?=.*((?i)🇺🇸|美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States))(?!.*((?i)回国|校园|游戏|教育|久虚|Trust|🎮|(\b(GAME)\b)|IPV6)).*$'
FilterCA: &FilterCA '^(?=.*((?i)🇨🇦|加拿大|CA|Canada))(?!.*((?i)回国|校园|游戏|教育|久虚|IPV6|🎮|(\b(GAME)\b))).*$'
FilterHK: &FilterHK '^(?=.*((?i)🇭🇰|港|虚通|Trust|HK|Hong))(?!.*((?i)回国|校园|游戏|教育|GAME|IPV6)).*$'
FilterTW: &FilterTW '^(?=.*((?i)🇹🇼|台|TW|Tai))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|Trust|IPV6)).*$'
FilterJP: &FilterJP '^(?=.*((?i)🇯🇵|日|川日|东京|大阪|泉日|埼玉|JP|Japan))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$'
FilterKR: &FilterKR '^(?=.*((?i)🇰🇷|韩|韓|首尔|KR|Korea))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$'
FilterSG: &FilterSG '^(?=.*((?i)🇸🇬|新加坡|狮|SG|Singapore))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$'
FilterUK: &FilterUK '^(?=.*((?i)🇬🇧|英|伦敦|爱尔兰|UK|United Kingdom))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$'
FilterFR: &FilterFR '^(?=.*((?i)🇫🇷|法|FR|France))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$'
FilterOthers: &FilterOthers '^(?=.*((?i)特殊|购物))(?!.*((?i)🇨🇦|🇬🇧|🇫🇷|教育|久虚|GAME|Trust|IPV6)).*$'

# 策略组参数锚点
# 锚点 - 时延优选参数 [每 6 秒一次惰性健康检查，容差 20ms，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
UrlTest: &UrlTest {type: url-test, interval: 6, tolerance: 20, lazy: true, url: 'http://cp.cloudflare.com', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 规则参数 [每小时更新一次订阅规则，更新规则时使用Global策略]
RuleProviders: &RuleProviders {type: http, behavior: classical, interval: 3600, format: yaml, proxy: Global}
# 锚点 - 故障转移参数 [每 6 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
# FallBack: &FallBack {type: fallback, interval: 6, lazy: true, url: 'http://cp.cloudflare.com', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 负载均衡参数 [每 6 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
# LoadBalance: &LoadBalance {type: load-balance, interval: 6, lazy: true, url: 'http://cp.cloudflare.com', disable-udp: false, strategy: consistent-hashing, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}

# 策略组
proxy-groups: 
  - {name: Global, type: select, proxies: [🇺🇸US, 🇨🇦CA, 🇭🇰HK, 🇹🇼TW, 🇯🇵JP, 🇰🇷KR, 🇸🇬SG, 🇬🇧UK, 🇫🇷FR, 🇺🇳Others, Final, DIRECT], icon: https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Outside.png}
  - {name: GlobalMedia, type: select, proxies: [🇺🇸US, 🇨🇦CA, 🇭🇰HK, 🇹🇼TW, 🇯🇵JP, 🇰🇷KR, 🇸🇬SG, 🇬🇧UK, 🇫🇷FR, 🇺🇳Others, Final, DIRECT], icon: https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/GMedia.png}
  - {name: Games, type: select, proxies: [DIRECT, 🇺🇸US, 🇭🇰HK, 🇯🇵JP, Final], icon: https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Game.png}
  - {name: Netflix, type: select, proxies: [🇺🇸US, 🇨🇦CA, 🇭🇰HK, 🇹🇼TW, 🇯🇵JP, 🇰🇷KR, 🇸🇬SG, 🇬🇧UK, 🇫🇷FR], icon: https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Netflix.png}
  - {name: YouTube, type: select, proxies: [🇺🇸US, 🇨🇦CA, 🇭🇰HK, 🇹🇼TW, 🇯🇵JP, 🇰🇷KR, 🇸🇬SG, 🇬🇧UK, 🇫🇷FR], icon: https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Youtube.png}
  - {name: Emby, type: select, proxies: [DIRECT, 🇺🇸US, 🇨🇦CA, 🇭🇰HK, 🇹🇼TW, 🇯🇵JP, 🇰🇷KR, 🇸🇬SG, 🇬🇧UK, 🇫🇷FR], icon: https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Emby.png}
  - {name: Google, type: select, proxies: [🇺🇸US, 🇨🇦CA, 🇭🇰HK, 🇹🇼TW, 🇯🇵JP, 🇰🇷KR, 🇸🇬SG, 🇬🇧UK, 🇫🇷FR], icon: https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Google.png}
  - {name: Apple, type: select, proxies: [DIRECT, 🇺🇸US, 🇨🇦CA, 🇭🇰HK, 🇹🇼TW, 🇯🇵JP, 🇰🇷KR, 🇸🇬SG, 🇬🇧UK, 🇫🇷FR], icon: https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Apple.png}
  - {name: Microsoft, type: select, proxies: [DIRECT, 🇺🇸US, 🇨🇦CA, 🇭🇰HK, 🇹🇼TW, 🇯🇵JP, 🇰🇷KR, 🇸🇬SG, 🇬🇧UK, 🇫🇷FR], icon: https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Microsoft.png}
  - {name: AI, type: select, include-all-providers: true, filter: *FilterUS, icon: https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/OpenAI.png}
  - {name: Twitter, type: select, proxies: [🇺🇸US, 🇨🇦CA, 🇭🇰HK, 🇹🇼TW, 🇯🇵JP, 🇰🇷KR, 🇸🇬SG, 🇬🇧UK, 🇫🇷FR], icon: https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Twitter.png}
  - {name: Telegram, type: select, proxies: [🇺🇸US, 🇨🇦CA, 🇭🇰HK, 🇹🇼TW, 🇯🇵JP, 🇰🇷KR, 🇸🇬SG, 🇬🇧UK, 🇫🇷FR], icon: https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Telegram.png}
  - {name: DomesticMedia, type: select, proxies: [DIRECT, 🇺🇸US, 🇨🇦CA, 🇭🇰HK, 🇹🇼TW, 🇯🇵JP, 🇰🇷KR, 🇸🇬SG, 🇬🇧UK, 🇫🇷FR, 🇺🇳Others], icon: https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/}
  - {name: Advertising, type: select, proxies: [DIRECT, REJECT, Final], icon: https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/AdBlock.png}
  - {name: Final, type: select, proxies: [DIRECT, 🇺🇸US, 🇨🇦CA, 🇭🇰HK, 🇹🇼TW, 🇯🇵JP, 🇰🇷KR, 🇸🇬SG, 🇬🇧UK, 🇫🇷FR], icon: https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Final01.png}

  - {name: 🇺🇸US, type: select, filter: *FilterUS, include-all-providers: true}
  - {name: 🇨🇦CA, type: select, filter: *FilterCA, include-all-providers: true}
  - {name: 🇭🇰HK, type: select, filter: *FilterHK, include-all-providers: true}
  - {name: 🇹🇼TW, type: select, filter: *FilterTW, include-all-providers: true}
  - {name: 🇯🇵JP, type: select, filter: *FilterJP, include-all-providers: true}
  - {name: 🇰🇷KR, type: select, filter: *FilterKR, include-all-providers: true}
  - {name: 🇸🇬SG, type: select, filter: *FilterSG, include-all-providers: true}
  - {name: 🇬🇧UK, type: select, filter: *FilterUK, include-all-providers: true}
  - {name: 🇫🇷FR, type: select, filter: *FilterFR, include-all-providers: true}
  - {name: 🇺🇳Others, type: select, filter: *FilterOthers, include-all-providers: true}

# 订阅规则
rule-providers:
# 广告、隐私及反劫持
  Advertising:
    <<: *RuleProviders
    path: './rules/Advertising.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Advertising/Advertising_Classical.yaml'
    
  Hijacking:
    <<: *RuleProviders
    path: './rules/Hijacking.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Hijacking/Hijacking.yaml'

  Privacy:
    <<: *RuleProviders
    path: './rules/Privacy.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Privacy/Privacy_Classical.yaml'

# 国内及lan直连
  Lan:
    <<: *RuleProviders
    path: './rules/Lan.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.yaml'

  Direct:
    <<: *RuleProviders
    path: './rules/Direct.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/Direct.yaml'

  ChinaDownloadCDN:
    <<: *RuleProviders
    path: './rules/ChinaDownloadCDN.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/ChinaDownloadCDN.yaml'

  ESET_China:
    <<: *RuleProviders
    path: './rules/ESET_China.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/ESET_China.yaml'

# > 海外流媒体
  Netflix:
    <<: *RuleProviders
    path: './rules/Netflix.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.yaml'

  YouTube:
    <<: *RuleProviders
    path: './rules/YouTube.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.yaml'

  Emby:
    <<: *RuleProviders
    path: './rules/Emby.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/EmbyServer.yaml'

# 海外流媒体总规则
  GlobalMedia:
    <<: *RuleProviders
    path: './rules/GlobalMedia.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GlobalMedia/GlobalMedia_Classical.yaml'

# > 国内媒体
  Weibo:
    <<: *RuleProviders
    path: './rules/Weibo.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Weibo/Weibo.yaml'

  Zhihu:
    <<: *RuleProviders
    path: './rules/Zhihu.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Zhihu/Zhihu.yaml'

# > 软件&游戏&服务
  AI:
    <<: *RuleProviders
    path: './rules/AI.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/AI.yaml'

  Twitter:
    <<: *RuleProviders
    path: './rules/Twitter.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Twitter/Twitter.yaml'

  Telegram:
    <<: *RuleProviders
    path: './rules/Telegram.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/Telegram.yaml'

  Game:
    <<: *RuleProviders
    path: './rules/Game.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/Game.yaml'

  Steam:
    <<: *RuleProviders
    path: './rules/Steam.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Steam/Steam.yaml'

  Apple:
    <<: *RuleProviders
    path: './rules/Apple.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple_Classical.yaml'

  Google:
    <<: *RuleProviders
    path: './rules/Google.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google.yaml'

  Microsoft:
    <<: *RuleProviders
    path: './rules/Microsoft.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.yaml'

  InternationalDownloadCDN:
    <<: *RuleProviders
    path: './rules/InternationalDownloadCDN.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/InternationalDownloadCDN.yaml'
      
  Applications:
    <<: *RuleProviders
    path: ./rules/Applications.yaml
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt"

# 规则指向
rules:
  - RULE-SET, Advertising, Advertising
  - RULE-SET, Hijacking, Advertising
  - RULE-SET, Privacy, Advertising
  - RULE-SET, Lan, DIRECT
  - RULE-SET, Direct, DIRECT
  - RULE-SET, ChinaDownloadCDN, DIRECT
  - RULE-SET, InternationalDownloadCDN, Global
  - RULE-SET, Netflix, Netflix
  - RULE-SET, YouTube, YouTube
  - RULE-SET, Emby, Emby
  - RULE-SET, Weibo, DomesticMedia
  - RULE-SET, Zhihu, DomesticMedia
  - RULE-SET, AI, AI
  - RULE-SET, Twitter, Twitter
  - RULE-SET, Steam, Games
  - RULE-SET, Game, Games
  - RULE-SET, GlobalMedia, GlobalMedia
  - RULE-SET, Apple, Apple
  - RULE-SET, Microsoft, Microsoft
  - RULE-SET, Google, Google
  - RULE-SET, Telegram, Telegram
  - RULE-SET, ESET_China, DIRECT
  - RULE-SET, Applications, DIRECT
  - GEOIP, CN, DIRECT
  - MATCH, Final
