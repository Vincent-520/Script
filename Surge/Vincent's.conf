[General]
# 延迟设置
# > Internet 测试 URL
internet-test-url = http://www.baidu.com
# > 代理测速 URL
proxy-test-url = http://www.google.com/generate_204
# > 测试超时（秒）
test-timeout = 3
# UDP 代理转发测试指定：默认向 8.8.8.8 查询 apple.com，可使用 proxy-test-udp 参数修改，如 proxy-test-udp = google.com@1.1.1.1
# proxy-test-udp = google.com@1.1.1.1
# 增强版 Wi-Fi 助理
# Surge 会在 Wi-Fi 网络不佳时尝试使用数据网络建立连接。该功能将对所有连接生效，请仅当使用不限量的数据流量时开启。
wifi-assist = false
# 混合网络：无论 Wi-Fi 信号如何，总是尝试并发使用 Wi-Fi 和数据网络连接。开启后，等同于对所有策略设置 hybrid = true，所有 TCP 连接在建立时均会并发尝试数据网络和 WiFi 连接，也就说如果不想对所有策略启用「混合网络」可以指定目标策略使用，如：
# HYBRID = direct, hybrid=true
# 但实际上可以不用这么写，因为 Surge 新增了两个内置策略：
# HYBRID：等价于 HYBRID = direct, hybrid=true
# NO-HYBRID ：等价于 NO-HYBRID = direct, hybrid=off
# 对于 DIRECT 的「混合网络」应用，可以使用直接使上述两个内置策略。
# 至于其他策略，「混合网络」的参数说明如下：
# hybrid=auto：默认，使用全局设置也就是使用 [General] 下的 all-hybrid 设置；
# hybrid=on 或 hybrid=true：对该策略启动并发连接；
# hybrid=off：即使在 All Hybrid 或 WiFi Assist 开启时，有 WiFi 就不使用数据网络；
# 除此之外，所有 DNS 查询操作也都将并发在数据网络和 WiFi 上进行。所以若想体验该功能，请手动配置公网 DNS，暂不支持 DOH。
# 该选项可显著改善在弱 Wi-Fi 和网络切换时的网络体验。该选项对所有 TCP 连接和 DNS 查询生效。请仅当使用不限量的数据流量套餐时开启。
all-hybrid = false
# 「Wi-Fi 助理」和「混合网络」的区别：
# WiFi Assist：使用 WiFi 尝试建立连接后，如果一秒钟内仍未完成，则再使用数据网络尝试连接。选择最先完成的 TCP 连接；
# Hybrid：直接并发建立两个 TCP 连接，选择最先完成的 TCP 连接.
# GeoIP 数据库
geoip-maxmind-url = https://raw.githubusercontent.com/NobyDa/geoip/release/Private-GeoIP-CN.mmdb
# GeoIP 禁用自动更新
disable-geoip-db-auto-update = false
# 是否启动完整的 IPv6 支持 (默认值: false)参数：true：开启，false：关闭
ipv6 = false
# Surge VIF IPv6 Stack
# 允许 IPv6 通过 Surge VIF。当希望 Surge 处理连接到 IPv6 地址的原始 TCP 连接时非常有用。可选项：true，false，auto，always
ipv6-vif = auto
# ⚠️ 隐藏状态栏上的VPN图标，启动该选项可能导致「Cannot allocate memory」系统错误，请谨慎使用，本配置在开启IP v6选项时失效
hide-vpn-icon = true
# Wi-Fi 访问
# Surge 可以作为 HTTP/SOCKS5 代理服务器向 Wi-Fi 网络下的其他设备提供服务器
allow-wifi-access = true
# Surge iOS 供外网访问的服务端口
# HTTP 服务端口 (默认值: 6152)
wifi-access-http-port = 6152
# SOCKS5 服务端口 (默认值: 6153)
wifi-access-socks5-port = 6153
# 远程控制器
# 允许外部控制器访问 Surge，Surge Dashboard 或 Surge CLI 进行管理控制
# 默认仅允许外部控制器通过 USB 进行控制。如果想要允许由 Wi-Fi 控制可以将 127.0.0.1 改为 0.0.0.0
# @前内容为密码
external-controller-access = Vincent@127.0.0.1:6170
http-api = Vincent@127.0.0.1:6171
# 使用HTTPS替代HTTP协议，需要先配置Mitm的CA证书，同时需要在客户端设备上手动安装并信任CA证书
http-api-tls = true
# 页面控制器：通过页面控制Surge， Safari输入127.0.0.1:6171,填入HTTP-API密码即可。
http-api-web-dashboard = true
# 允许热点共享
allow-hotspot-access = false
# DNS相关设置
# 传统 DNS 服务器设置
dns-server = 119.29.29.29,223.5.5.5
# 加密 DNS 服务器设置
# encrypted-dns-server = https://dns.alidns.com/dns-query
# encrypted-dns-server = https://dns.google/dns-query
# encrypted-dns-server = https://cloudflare-dns.com/dns-query
# encrypted-dns-server = https://dns.adguard.com/dns-query
# encrypted-dns-server = https://public.dns.iij.jp/dns-query
# 实验性 DNS ove QUIC 支持
# encrypted-dns-server = quic://dns.adguard.com
encrypted-dns-server = h3://223.5.5.5/dns-query
# 使加密 DNS 请求通过代理策略执行
encrypted-dns-follow-outbound-mode = false
# 跳过证书验证
encrypted-dns-skip-cert-verification = false
# 对使用代理的请求强制使用本地 DNS 映射结果
# 默认情况下，当使用代理策略时，DNS 解析永远在代理服务器进行。
# 开启该选项后，对于存在于本地 DNS 映射中的域名，Surge 将使用本地映射结果的 IP 地址进行代理请求，而不再使用原始域名。
# 仅对使用了 IP 地址的本地映射记录生效。
use-local-host-item-for-proxy = true
# TCP Force HTTP Hosts
# 使 Surge 将 TCP 连接视为 HTTP 请求。Surge HTTP 引擎将处理请求，并且所有高级功能都将可用，如截取、重写和脚本。
# 支持通配符 * 及 ?；
# 使用前缀 - 排除主机名；
# 默认情况下，只对 80 端口的请求进行处理（使用 example.com:443 指定端口或 example.com:0 表示所有端口）；
# <ip-address> 表示匹配所有主机名为 IP 地址的连接；
# <ipv4-address> 表示匹配所有主机名为 IPv4 地址的连接；
# <ipv6-address> 表示匹配所有主机名为 IPv6 地址的连接；
# 下面是一些示例：
# -*.apple.com：排除所有发往 *.apple.com 上的 80 端口的请求；
# www.google.com：对 www.google.com 上的 80 端口的请求强制使用 HTTP 处理；
# www.google.com:8080：对 www.google.com 上的 8080 端口的请求强制使用 HTTP 处理；
# www.google.com:0：对 www.google.com 上的所有端口的请求强制使用 HTTP 处理；
# *:0：对所有主机名上的所有端口使用强制 HTTP 处理。
# KOOWO - 119.18.193.135, 122.14.246.33, 123.59.31.1, 175.102.178.52
# TencentVideo/Youku/iQiyi - 116.253.24.*, 124.193.*, 124.14*, 119.79*, 175.6.26.*, 211.162.*, 220.112.* 220.169.153.*
force-http-engine-hosts = *.ott.cibntv.net, 119.18.193.135, 122.14.246.33, 123.59.31.1, 175.102.178.52, 116.253.24.*, 124.193.*, 124.14*, 119.79*, 175.6.26.*, 211.162.*, 220.112.* 220.169.153.*
# Always Raw TCP Hosts
# 用于强行关闭对特定主机名的主动协议探测，与 force-http-engine-hosts 参数的书写方法一致
# always-raw-tcp-hosts = example.com:80, <ip-address>:0
# Always Real IP Hosts
# 当 Surge VIF 处理 DNS 问题时，此选项要求 Surge 返回一个真正的 IP 地址，而不是一个 Fake IP。
# DNS 数据包将被转发到上游 DNS 服务器。
# 例如由于游戏主机会使用 STUN 技术进行 NAT 穿透，需要进行一些额外的配置才能正常工作。
always-real-ip = *.lan,*.direct,cable.auth.com,*.msftconnecttest.com,*.msftncsi.com,network-test.debian.org,detectportal.firefox.com,resolver1.opendns.com,*.srv.nintendo.net,*.stun.playstation.net,xbox.*.microsoft.com,*.xboxlive.com,stun.*,global.turn.twilio.com,global.stun.twilio.com,app.yinxiang.com,injections.adguard.org,local.adguard.org,cable.auth.com,localhost.*.qq.com,localhost.*.weixin.qq.com,*.logon.battlenet.com.cn,*.logon.battle.net,*.blzstatic.cn,music.163.com,*.music.163.com,*.126.net,musicapi.taihe.com,music.taihe.com,songsearch.kugou.com,trackercdn.kugou.com,api-jooxtt.sanook.com,api.joox.com,joox.com,y.qq.com,*.y.qq.com,streamoc.music.tc.qq.com,mobileoc.music.tc.qq.com,isure.stream.qqmusic.qq.com,dl.stream.qqmusic.qq.com,aqqmusic.tc.qq.com,amobile.music.tc.qq.com,*.xiami.com,*.music.migu.cn,music.migu.cn,proxy.golang.org,*.mcdn.bilivideo.cn,*.cmpassport.com,id6.me,open.e.189.cn,mdn.open.wo.cn,opencloud.wostore.cn,auth.wosms.cn,*.jegotrip.com.cn,*.icitymobile.mobi,*.pingan.com.cn,*.cmbchina.com,pool.ntp.org,*.pool.ntp.org,ntp.*.com,time.*.com,ntp?.*.com,time?.*.com,time.*.gov,time.*.edu.cn,*.ntp.org.cn,PDC._msDCS.*.*,DC._msDCS.*.*,GC._msDCS.*.*,www.google.com, 91.108.*, 5.28.195.*, 149.154.1*, 185.76.151.*, 91.105.1*,*.115.com,202.160.129.*
# VIF Excluded Routes
# Surge VIF 只能处理 TCP 和 UDP 协议。使用此选项可以绕过特定的 IP 范围，允许所有流量通过。
# ⚠️ 注意：此选项仅适用于 Surge VIF。Surge 代理服务器处理的请求不受影响。将「skip-proxy」和「tun-excluded-routes」组合起来，以确保特定的 HTTP 流量绕过 Surge。
# 此选项可能导致系统错误 ENOMEM (无法分配内存)。这看起来像是 iOS 系统中的一个 bug。如果可能，请不要使用此选项。
# tun-excluded-routes = 239.255.255.250/32
# VIF Included Routes
# 默认情况下，Surge VIF 接口会声明自己是默认路由。但是，由于 Wi-Fi 接口的路由较小，有些流量可能不会通过 Surge VIF 接口。使用此选项可以添加一条较小的路由。
# tun-included-routes = 192.168.1.12/32
# 路由防火墙
# 包含所有的网络请求
# include-all-networks = false
# 包含本地网络请求
# include-local-networks = false
# 高级
# 日志等级: warning, notify, info, verbose (默认值: notify)
# ⚠️ 不建议在日常使用中启用 verbose，因为这会严重降低性能。
loglevel = notify
# 排除简单主机名
exclude-simple-hostnames = true
# udp-policy-not-supported-behaviour 参数用于控制当 UDP 流量被匹配到一个不支持 UDP 转发的策略时的行为
# DIRECT：回退到 DIRECT 策略（默认）
# REJECT：回退到 REJECT 策略
# 如一些海外游戏和语音使用 UDP 协议，而所使用的服务器不支持 UDP Relay 时，设置为 reject 将无法连接，但如果需要调整该参数的值为 direct，请务必清楚了解同一目标主机名 TCP 请求与 UDP 请求的源地址不同所造成的隐私及安全风险。
# udp-policy-not-supported-behaviour = REJECT
# 
# Hijack DNS
# 默认情况下，Surge 只对发送到 Surge DNS 地址(198.18.0.2)的 DNS 查询返回 Fack IP 地址。发送到标准 DNS 的查询将被转发。
# 如 Google 系智能硬件产品会无视 DHCP 配置强行使用 8.8.8.8 和 8.8.4.4，需要配置 Surge 强行劫持才可以正常工作。
# 另外还可以使用 hijack-dns = *:53 来劫持所有的 DNS 查询。
hijack-dns = 8.8.8.8:53, 1.1.1.1:53, 8.8.4.4:53
# 当遇到 REJECT 策略时显示错误页
show-error-page-for-reject = true
# 游戏优化模式
# 开启后会提高处理 UDP 流量的优先级，当系统负载高时会有比较明显的作用 (如高性能联机游戏)
udp-priority = true

[Proxy Group]
PROXY = select, policy-path=你的订阅, update-interval=0, no-alert=0, hidden=0, include-all-proxies=0
AutoHK = url-test, update-interval=0, policy-regex-filter=^(?=.*((?i)🇭🇰|港|虚通|Trust|HK|Hong))(?!.*((?i)回国|校园|游戏|教育|GAME|IPV6)).*$, interval=600, timeout=3, hidden=0, no-alert=0, include-all-proxies=0, include-other-group=PROXY
Global = select, US, CA, HK, TW, JP, SG, FINAL, DIRECT, no-alert=0, hidden=0, include-all-proxies=0
GlobalMedia = select, US, CA, HK, TW, JP, SG, FINAL, DIRECT, no-alert=0, hidden=0, include-all-proxies=0
Netflix = select, US, CA, HK, TW, JP, SG, FINAL, DIRECT, no-alert=0, hidden=0, include-all-proxies=0
Disney+ = select, US, CA, HK, TW, JP, SG, FINAL, DIRECT, no-alert=0, hidden=0, include-all-proxies=0
HBO = select, US, HK, TW, DIRECT, FINAL
YouTube = select, US, HK, TW, JP, SG, FINAL, DIRECT
Spotify = select, DIRECT, US, HK, TW, JP, SG, FINAL
OpenAI = select, DIRECT, US, HK, TW, JP, SG, FINAL
Telegram = select, US, HK, TW, JP, SG, FINAL, DIRECT
Twitter = select, US, HK, TW, JP, SG, FINAL, DIRECT
Speedtest = select, DIRECT, US, HK, TW, JP, SG, FINAL
PayPal = select, US, HK, TW, JP, SG, FINAL, DIRECT
TestFlight = select, DIRECT, US, HK, TW, JP, SG, FINAL
Apple = select, DIRECT, US, HK, TW, JP, SG, FINAL
Google = select, US, CA, HK, TW, JP, SG, FINAL, DIRECT, no-alert=0, hidden=0, include-all-proxies=0
Microsoft = select, DIRECT, US, CA, HK, FINAL, no-alert=0, hidden=0, include-all-proxies=0
TikTok = select, US, TW, JP, SG, FINAL, DIRECT
抖音 = select, US, CA, UK, HK, TW, JP, SG, FINAL, DIRECT
Bilibili = select, DIRECT, HK, TW, FINAL
小红书 = select, US, CA, UK, HK, TW, JP, SG, FINAL, DIRECT
Weibo = select, DIRECT, US, CA, UK, HK, TW, JP, SG, FINAL, no-alert=0, hidden=0, include-all-proxies=0
Mainland = select, DIRECT, FINAL
Advertising = select, REJECT, DIRECT, hidden=1, no-alert=0, include-all-proxies=0
FINAL = select, PROXY, AutoHK, DIRECT
HK = select, update-interval=0, policy-regex-filter=^(?=.*((?i)🇭🇰|港|虚通|Trust|HK|Hong))(?!.*((?i)回国|校园|游戏|教育|GAME|IPV6)).*$, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=PROXY
TW = select, update-interval=0, policy-regex-filter=^(?=.*((?i)🇹🇼|台|TW|Tai))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|Trust|IPV6)).*$, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=PROXY
JP = select, update-interval=0, policy-regex-filter=^(?=.*((?i)🇯🇵|日|川日|东京|大阪|泉日|埼玉|JP|Japan))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=PROXY
KR = select, update-interval=0, policy-regex-filter=^(?=.*((?i)🇰🇷|韩|韓|首尔|KR|Korea))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=PROXY
SG = select, update-interval=0, policy-regex-filter=^(?=.*((?i)🇸🇬|新加坡|狮|SG|Singapore))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=PROXY
US = select, update-interval=0, policy-regex-filter=^(?=.*((?i)🇺🇸|美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States))(?!.*((?i)回国|校园|游戏|教育|久虚|Trust|GAME|IPV6)).*$, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=PROXY
CA = select, update-interval=0, policy-regex-filter=^(?=.*((?i)🇨🇦|加拿大|CA|Canada))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=PROXY
AU = select, update-interval=0, policy-regex-filter=^(?=.*((?i)🇦🇺|澳大|AU|Australia))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=PROXY
UK = select, update-interval=0, policy-regex-filter=^(?=.*((?i)🇬🇧|英|伦敦|UK|United Kingdom))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=PROXY
FR = select, update-interval=0, policy-regex-filter=^(?=.*((?i)🇫🇷|法|FR|France))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=PROXY
DE = select, update-interval=0, policy-regex-filter=^(?=.*((?i)🇩🇪|德|DE|Germany))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|Trust|IPV6)).*$, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=PROXY
RU = select, update-interval=0, policy-regex-filter=^(?=.*((?i)🇷🇺|俄|莫斯科|新西伯利亚|Новосиби́рская|Moscow|RU|Russia))(?!.*((?i)回国|校园|游戏|教育|久虚|Trust|GAME|IPV6)).*$, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=PROXY
IN = select, update-interval=0, policy-regex-filter=^(?=.*((?i)🇮🇳|印|班加罗尔|孟买|Mumbai|IN|India))(?!.*((?i)回国|校园|游戏|教育|久虚|Trust|GAME|IPV6)).*$, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=PROXY

[Rule]
# Advertising 广告
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Advertising/Advertising_All_No_Resolve.list,Advertising
# Privacy 隐私
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Privacy/Privacy_All_No_Resolve.list,Advertising
# Hijacking 运营商劫持或恶意网站
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Hijacking/Hijacking.list,Advertising
# > 海外流媒体
# Netflix
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Netflix/Netflix.list,Netflix
# Disney+
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Disney/Disney.list,Disney+
# HBO
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/HBO/HBO.list,HBO
# YouTube
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/YouTube/YouTube.list,YouTube
# Spotify
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Spotify/Spotify.list,Spotify
# TikTok
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/TikTok/TikTok.list,TikTok
# > 海外流媒体总规则
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/GlobalMedia/GlobalMedia.list,GlobalMedia
# > 软件&服务
# OpenAI
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/OpenAI/OpenAI.list,OpenAI
# Twitter
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Twitter/Twitter.list,Twitter
# Speedtest
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Speedtest/Speedtest.list,Speedtest
# PayPal
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/PayPal/PayPal.list,PayPal
# Telegram
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Telegram/Telegram.list,Telegram
# TestFlight
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/TestFlight/TestFlight.list,TestFlight
# Apple
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Apple/Apple.list,Apple
# Google
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Google/Google.list,Google
# Microsoft
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Microsoft/Microsoft.list,Microsoft
# > 国内媒体
# Bilibili
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/BiliBili/BiliBili.list,Bilibili
# Weibo
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Weibo/Weibo.list,Weibo
# 抖音
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/DouYin/DouYin.list,抖音
# 小红书
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/XiaoHongShu/XiaoHongShu.list,小红书
# Mainland 国内访问
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/China/China.list,Mainland
# Global 全球加速
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Global/Global.list,Global
DOMAIN-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Global/Global_Domain.list,Global
# ---IP地址规则---
# > GeoIP China
GEOIP,CN,DIRECT
# ---Final规则---
# > 必须写在所有其他类型的规则之后
# > 当某条请求不匹配以上任何一条规则，则与FINAL规则匹配
FINAL,FINAL,dns-failed

[Host]
# DNS 映射
# IPv6
ip6-localhost = ::1 // IPv6 Localhost
ip6-loopback = ::1 // IPv6 Loopback
ip6-localnet = fe00::0 // IPv6 Link-Local
ip6-mcastprefix = ff00::0 // IPv6 Multicast
ip6-allnodes = ff02::1 // IPv6 All Nodes
ip6-allrouters = ff02::2 // IPv6 All Routers
ip6-allhosts = ff02::3 // IPv6 All Hosts
# DNS 服务器
*.openai.com = 8.219.102.212
taobao.com = server:223.6.6.6
*.taobao.com = server:223.6.6.6
tmall.com = server:223.6.6.6
*.tmall.com = server:223.6.6.6
jd.com = server:119.29.29.29
*.jd.com = server:119.28.28.28
*.bilibili.com = server:119.29.29.29
*.alicdn.com = server:223.5.5.5
aliyun.com = server:223.5.5.5
*.aliyun.com = server:223.5.5.5
hdslb.com = server:119.29.29.29
163.com = server:119.29.29.29
*.163.com = server:119.29.29.29
126.com = server:119.29.29.29
*.126.com = server:119.29.29.29
*.126.net = server:119.29.29.29
*.127.net = server:119.29.29.29
*.netease.com = server:119.29.29.29
mi.com = server:119.29.29.29
*.mi.com = server:119.29.29.29
xiaomi.com = server:119.29.29.29
*.xiaomi.com = server:119.29.29.29
routerlogin.net = server:syslib
_hotspot_.m2m = server:syslib
router.asus.com = server:syslib
hotspot.cslwifi.com = server:syslib
amplifi.lan = server:syslib
*.lan = server:syslib

[MITM]
# > VIF 对原始 TCP 流量进行解密
skip-server-cert-verify = true
# > MITM 使用 HTTP/2 协议
tcp-connection = true
h2 = true

[Script]
# 显示运行时间及MitM等功能开关状态
EDC_Surge-Panel = type=generic,script-path=https://raw.githubusercontent.com/erdongchanyo/Rules/main/Surge/Panels/EDC_Surge-Panel.js,argument=icon=crown.fill&color=#f6c970

[Panel]
# 显示运行时间及MitM等功能开关状态
# 点击刷新为重载配置
EDC_Surge-Panel = script-name=EDC_Surge-Panel,update-interval=1

